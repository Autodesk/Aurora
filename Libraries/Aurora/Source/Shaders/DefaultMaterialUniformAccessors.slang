// Auto-generated by unit test BasicTest in AuroraExternals test suite.

 // Get property base from byte address buffer
float Material_base(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 0));
}

 // Get property base_color from byte address buffer
float3 Material_baseColor(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load3(materialOffset + 4));
}

 // Get property diffuse_roughness from byte address buffer
float Material_diffuseRoughness(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 16));
}

 // Get property metalness from byte address buffer
float Material_metalness(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 20));
}

 // Get property specular from byte address buffer
float Material_specular(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 24));
}

 // Get property specular_color from byte address buffer
float3 Material_specularColor(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load3(materialOffset + 32));
}

 // Get property specular_roughness from byte address buffer
float Material_specularRoughness(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 44));
}

 // Get property specular_IOR from byte address buffer
float Material_specularIOR(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 48));
}

 // Get property specular_anisotropy from byte address buffer
float Material_specularAnisotropy(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 52));
}

 // Get property specular_rotation from byte address buffer
float Material_specularRotation(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 56));
}

 // Get property transmission from byte address buffer
float Material_transmission(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 60));
}

 // Get property transmission_color from byte address buffer
float3 Material_transmissionColor(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load3(materialOffset + 64));
}

 // Get property subsurface from byte address buffer
float Material_subsurface(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 76));
}

 // Get property subsurface_color from byte address buffer
float3 Material_subsurfaceColor(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load3(materialOffset + 80));
}

 // Get property subsurface_radius from byte address buffer
float3 Material_subsurfaceRadius(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load3(materialOffset + 96));
}

 // Get property subsurface_scale from byte address buffer
float Material_subsurfaceScale(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 108));
}

 // Get property subsurface_anisotropy from byte address buffer
float Material_subsurfaceAnisotropy(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 112));
}

 // Get property sheen from byte address buffer
float Material_sheen(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 116));
}

 // Get property sheen_color from byte address buffer
float3 Material_sheenColor(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load3(materialOffset + 128));
}

 // Get property sheen_roughness from byte address buffer
float Material_sheenRoughness(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 140));
}

 // Get property coat from byte address buffer
float Material_coat(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 144));
}

 // Get property coat_color from byte address buffer
float3 Material_coatColor(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load3(materialOffset + 148));
}

 // Get property coat_roughness from byte address buffer
float Material_coatRoughness(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 160));
}

 // Get property coat_anisotropy from byte address buffer
float Material_coatAnisotropy(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 164));
}

 // Get property coat_rotation from byte address buffer
float Material_coatRotation(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 168));
}

 // Get property coat_IOR from byte address buffer
float Material_coatIOR(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 172));
}

 // Get property coat_affect_color from byte address buffer
float Material_coatAffectColor(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 176));
}

 // Get property coat_affect_roughness from byte address buffer
float Material_coatAffectRoughness(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 180));
}

 // Get property emission from byte address buffer
float Material_emission(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 184));
}

 // Get property emission_color from byte address buffer
float3 Material_emissionColor(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load3(materialOffset + 192));
}

 // Get property opacity from byte address buffer
float3 Material_opacity(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load3(materialOffset + 208));
}

 // Get property thin_walled from byte address buffer
int Material_thinWalled(ByteAddressBuffer buf, int materialOffset = 0) {
	return buf.Load(materialOffset + 220);
}

 // Get property has_base_color_image from byte address buffer
int Material_hasBaseColorTex(ByteAddressBuffer buf, int materialOffset = 0) {
	return buf.Load(materialOffset + 224);
}

 // Get property base_color_image_offset from byte address buffer
float2 Material_baseColorTexOffset(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 228));
}

 // Get property base_color_image_scale from byte address buffer
float2 Material_baseColorTexScale(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 240));
}

 // Get property base_color_image_pivot from byte address buffer
float2 Material_baseColorTexPivot(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 248));
}

 // Get property base_color_image_rotation from byte address buffer
float Material_baseColorTexRotation(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 256));
}

 // Get property has_specular_roughness_image from byte address buffer
int Material_hasSpecularRoughnessTex(ByteAddressBuffer buf, int materialOffset = 0) {
	return buf.Load(materialOffset + 260);
}

 // Get property specular_roughness_image_offset from byte address buffer
float2 Material_specularRoughnessTexOffset(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 264));
}

 // Get property specular_roughness_image_scale from byte address buffer
float2 Material_specularRoughnessTexScale(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 272));
}

 // Get property specular_roughness_image_pivot from byte address buffer
float2 Material_specularRoughnessTexPivot(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 280));
}

 // Get property specular_roughness_image_rotation from byte address buffer
float Material_specularRoughnessTexRotation(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 288));
}

 // Get property has_emission_color_image from byte address buffer
int Material_hasEmissionColorTex(ByteAddressBuffer buf, int materialOffset = 0) {
	return buf.Load(materialOffset + 292);
}

 // Get property emission_color_image_offset from byte address buffer
float2 Material_emissionColorTexOffset(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 296));
}

 // Get property emission_color_image_scale from byte address buffer
float2 Material_emissionColorTexScale(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 304));
}

 // Get property emission_color_image_pivot from byte address buffer
float2 Material_emissionColorTexPivot(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 312));
}

 // Get property emission_color_image_rotation from byte address buffer
float Material_emissionColorTexRotation(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 320));
}

 // Get property has_opacity_image from byte address buffer
int Material_hasOpacityTex(ByteAddressBuffer buf, int materialOffset = 0) {
	return buf.Load(materialOffset + 324);
}

 // Get property opacity_image_offset from byte address buffer
float2 Material_opacityTexOffset(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 328));
}

 // Get property opacity_image_scale from byte address buffer
float2 Material_opacityTexScale(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 336));
}

 // Get property opacity_image_pivot from byte address buffer
float2 Material_opacityTexPivot(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 344));
}

 // Get property opacity_image_rotation from byte address buffer
float Material_opacityTexRotation(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 352));
}

 // Get property has_normal_image from byte address buffer
int Material_hasNormalTex(ByteAddressBuffer buf, int materialOffset = 0) {
	return buf.Load(materialOffset + 356);
}

 // Get property normal_image_offset from byte address buffer
float2 Material_normalTexOffset(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 360));
}

 // Get property normal_image_scale from byte address buffer
float2 Material_normalTexScale(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 368));
}

 // Get property normal_image_pivot from byte address buffer
float2 Material_normalTexPivot(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load2(materialOffset + 376));
}

 // Get property normal_image_rotation from byte address buffer
float Material_normalTexRotation(ByteAddressBuffer buf, int materialOffset = 0) {
	return asfloat(buf.Load(materialOffset + 384));
}

