// Auto-generated by unit test BasicTest in AuroraExternals test suite.

 // Get property base from byte address buffer
float Material_base(ByteAddressBuffer buf) {
	return asfloat(buf.Load(0));
}

 // Get property base_color from byte address buffer
float3 Material_baseColor(ByteAddressBuffer buf) {
	return asfloat(buf.Load3(4));
}

 // Get property diffuse_roughness from byte address buffer
float Material_diffuseRoughness(ByteAddressBuffer buf) {
	return asfloat(buf.Load(16));
}

 // Get property metalness from byte address buffer
float Material_metalness(ByteAddressBuffer buf) {
	return asfloat(buf.Load(20));
}

 // Get property specular from byte address buffer
float Material_specular(ByteAddressBuffer buf) {
	return asfloat(buf.Load(24));
}

 // Get property specular_color from byte address buffer
float3 Material_specularColor(ByteAddressBuffer buf) {
	return asfloat(buf.Load3(32));
}

 // Get property specular_roughness from byte address buffer
float Material_specularRoughness(ByteAddressBuffer buf) {
	return asfloat(buf.Load(44));
}

 // Get property specular_IOR from byte address buffer
float Material_specularIOR(ByteAddressBuffer buf) {
	return asfloat(buf.Load(48));
}

 // Get property specular_anisotropy from byte address buffer
float Material_specularAnisotropy(ByteAddressBuffer buf) {
	return asfloat(buf.Load(52));
}

 // Get property specular_rotation from byte address buffer
float Material_specularRotation(ByteAddressBuffer buf) {
	return asfloat(buf.Load(56));
}

 // Get property transmission from byte address buffer
float Material_transmission(ByteAddressBuffer buf) {
	return asfloat(buf.Load(60));
}

 // Get property transmission_color from byte address buffer
float3 Material_transmissionColor(ByteAddressBuffer buf) {
	return asfloat(buf.Load3(64));
}

 // Get property subsurface from byte address buffer
float Material_subsurface(ByteAddressBuffer buf) {
	return asfloat(buf.Load(76));
}

 // Get property subsurface_color from byte address buffer
float3 Material_subsurfaceColor(ByteAddressBuffer buf) {
	return asfloat(buf.Load3(80));
}

 // Get property subsurface_radius from byte address buffer
float3 Material_subsurfaceRadius(ByteAddressBuffer buf) {
	return asfloat(buf.Load3(96));
}

 // Get property subsurface_scale from byte address buffer
float Material_subsurfaceScale(ByteAddressBuffer buf) {
	return asfloat(buf.Load(108));
}

 // Get property subsurface_anisotropy from byte address buffer
float Material_subsurfaceAnisotropy(ByteAddressBuffer buf) {
	return asfloat(buf.Load(112));
}

 // Get property sheen from byte address buffer
float Material_sheen(ByteAddressBuffer buf) {
	return asfloat(buf.Load(116));
}

 // Get property sheen_color from byte address buffer
float3 Material_sheenColor(ByteAddressBuffer buf) {
	return asfloat(buf.Load3(128));
}

 // Get property sheen_roughness from byte address buffer
float Material_sheenRoughness(ByteAddressBuffer buf) {
	return asfloat(buf.Load(140));
}

 // Get property coat from byte address buffer
float Material_coat(ByteAddressBuffer buf) {
	return asfloat(buf.Load(144));
}

 // Get property coat_color from byte address buffer
float3 Material_coatColor(ByteAddressBuffer buf) {
	return asfloat(buf.Load3(148));
}

 // Get property coat_roughness from byte address buffer
float Material_coatRoughness(ByteAddressBuffer buf) {
	return asfloat(buf.Load(160));
}

 // Get property coat_anisotropy from byte address buffer
float Material_coatAnisotropy(ByteAddressBuffer buf) {
	return asfloat(buf.Load(164));
}

 // Get property coat_rotation from byte address buffer
float Material_coatRotation(ByteAddressBuffer buf) {
	return asfloat(buf.Load(168));
}

 // Get property coat_IOR from byte address buffer
float Material_coatIOR(ByteAddressBuffer buf) {
	return asfloat(buf.Load(172));
}

 // Get property coat_affect_color from byte address buffer
float Material_coatAffectColor(ByteAddressBuffer buf) {
	return asfloat(buf.Load(176));
}

 // Get property coat_affect_roughness from byte address buffer
float Material_coatAffectRoughness(ByteAddressBuffer buf) {
	return asfloat(buf.Load(180));
}

 // Get property emission from byte address buffer
float Material_emission(ByteAddressBuffer buf) {
	return asfloat(buf.Load(184));
}

 // Get property emission_color from byte address buffer
float3 Material_emissionColor(ByteAddressBuffer buf) {
	return asfloat(buf.Load3(192));
}

 // Get property opacity from byte address buffer
float3 Material_opacity(ByteAddressBuffer buf) {
	return asfloat(buf.Load3(208));
}

 // Get property thin_walled from byte address buffer
int Material_thinWalled(ByteAddressBuffer buf) {
	return buf.Load(220);
}

 // Get property has_base_color_image from byte address buffer
int Material_hasBaseColorTex(ByteAddressBuffer buf) {
	return buf.Load(224);
}

 // Get property base_color_image_offset from byte address buffer
float2 Material_baseColorTexOffset(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(228));
}

 // Get property base_color_image_scale from byte address buffer
float2 Material_baseColorTexScale(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(240));
}

 // Get property base_color_image_pivot from byte address buffer
float2 Material_baseColorTexPivot(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(248));
}

 // Get property base_color_image_rotation from byte address buffer
float Material_baseColorTexRotation(ByteAddressBuffer buf) {
	return asfloat(buf.Load(256));
}

 // Get property has_specular_roughness_image from byte address buffer
int Material_hasSpecularRoughnessTex(ByteAddressBuffer buf) {
	return buf.Load(260);
}

 // Get property specular_roughness_image_offset from byte address buffer
float2 Material_specularRoughnessTexOffset(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(264));
}

 // Get property specular_roughness_image_scale from byte address buffer
float2 Material_specularRoughnessTexScale(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(272));
}

 // Get property specular_roughness_image_pivot from byte address buffer
float2 Material_specularRoughnessTexPivot(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(280));
}

 // Get property specular_roughness_image_rotation from byte address buffer
float Material_specularRoughnessTexRotation(ByteAddressBuffer buf) {
	return asfloat(buf.Load(288));
}

 // Get property has_emission_color_image from byte address buffer
int Material_hasEmissionColorTex(ByteAddressBuffer buf) {
	return buf.Load(292);
}

 // Get property emission_color_image_offset from byte address buffer
float2 Material_emissionColorTexOffset(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(296));
}

 // Get property emission_color_image_scale from byte address buffer
float2 Material_emissionColorTexScale(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(304));
}

 // Get property emission_color_image_pivot from byte address buffer
float2 Material_emissionColorTexPivot(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(312));
}

 // Get property emission_color_image_rotation from byte address buffer
float Material_emissionColorTexRotation(ByteAddressBuffer buf) {
	return asfloat(buf.Load(320));
}

 // Get property has_opacity_image from byte address buffer
int Material_hasOpacityTex(ByteAddressBuffer buf) {
	return buf.Load(324);
}

 // Get property opacity_image_offset from byte address buffer
float2 Material_opacityTexOffset(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(328));
}

 // Get property opacity_image_scale from byte address buffer
float2 Material_opacityTexScale(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(336));
}

 // Get property opacity_image_pivot from byte address buffer
float2 Material_opacityTexPivot(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(344));
}

 // Get property opacity_image_rotation from byte address buffer
float Material_opacityTexRotation(ByteAddressBuffer buf) {
	return asfloat(buf.Load(352));
}

 // Get property has_normal_image from byte address buffer
int Material_hasNormalTex(ByteAddressBuffer buf) {
	return buf.Load(356);
}

 // Get property normal_image_offset from byte address buffer
float2 Material_normalTexOffset(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(360));
}

 // Get property normal_image_scale from byte address buffer
float2 Material_normalTexScale(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(368));
}

 // Get property normal_image_pivot from byte address buffer
float2 Material_normalTexPivot(ByteAddressBuffer buf) {
	return asfloat(buf.Load2(376));
}

 // Get property normal_image_rotation from byte address buffer
float Material_normalTexRotation(ByteAddressBuffer buf) {
	return asfloat(buf.Load(384));
}

